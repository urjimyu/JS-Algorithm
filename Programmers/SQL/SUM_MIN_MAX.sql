-- 가장 비싼 상품구하기
SELECT MAX(PRICE) FROM PRODUCT AS MAX_PRICE;

-- 가격이 제일 비싼 식품의 정보 출력하기
SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_CD, CATEGORY, PRICE
FROM FOOD_PRODUCT
WHERE PRICE
IN (SELECT MAX(PRICE) FROM FOOD_PRODUCT);

-- 최댓값 구하기
SELECT MAX(DATETIME) FROM ANIMAL_INS;

-- 최솟값 구하기
SELECT MIN(DATETIME) FROM ANIMAL_INS;

-- 동물 수 구하기
SELECT COUNT(ANIMAL_ID) FROM ANIMAL_INS;

-- 중복 제거하기
SELECT COUNT(DISTINCT NAME) AS count FROM ANIMAL_INS;

-- 조건에 맞는 아이템들의 가격의 총합 구하기
-- 풀이 1
SELECT SUM(PRICE) AS TOTAL_PRICE
    FROM ITEM_INFO
        WHERE RARITY='LEGEND';

-- 조건에 맞는 아이템들의 가격의 총합 구하기
-- 풀이 2
SELECT SUM(PRICE) TOTAL_PRICE
FROM ITEM_INFO
GROUP BY RARITY
HAVING RARITY = 'LEGEND'

-- 물고기 종류 별 대어 찾기
SELECT i.ID ID, n.FISH_NAME FISH_NAME, i.LENGTH LENGTH
FROM FISH_INFO i JOIN FISH_NAME_INFO n
ON i.FISH_TYPE = n.FISH_TYPE
WHERE i.LENGTH = (SELECT MAX(i2.LENGTH) FROM FISH_INFO i2
                 WHERE i2.FISH_TYPE = i.FISH_TYPE)
ORDER BY i.ID;

-- 잡은 물고기 중 가장 큰 물고기의 길이 구하기
SELECT CONCAT(MAX(LENGTH), 'cm') AS MAX_LENGTH
FROM FISH_INFO;

-- 연도별 대장균 크기의 편차 구하기 
SELECT s.YEAR AS YEAR, s.MAX_SIZE - o.SIZE_OF_COLONY AS YEAR_DEV, o.ID
FROM ECOLI_DATA o JOIN 
(SELECT 
 MAX(SIZE_OF_COLONY) AS MAX_SIZE, YEAR(DIFFERENTIATION_DATE) AS YEAR 
 FROM ECOLI_DATA
GROUP BY YEAR) s
ON s.YEAR = YEAR(o.DIFFERENTIATION_DATE)
ORDER BY YEAR, YEAR_DEV;